// <auto-generated />
using System;
using CallForPapers.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CallForPapers.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240331120809_MakeFieldsRequired")]
    partial class MakeFieldsRequired
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CallForPapers.Domain.Models.Statement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Author")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Outline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SubmittedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("Statements");
                });

            modelBuilder.Entity("CallForPapers.Domain.Models.StatementActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e8186ef-2e65-45c9-8a6c-67bd6d4568c8"),
                            Description = "Доклад, 35-45 минут",
                            Name = "Report"
                        },
                        new
                        {
                            Id = new Guid("d6ba3e05-b767-4a49-a67e-b4e6f0633ded"),
                            Description = "Мастеркласс, 1-2 часа",
                            Name = "Masterclass"
                        },
                        new
                        {
                            Id = new Guid("d02ef514-0546-44b7-8627-81e1f809ecd5"),
                            Description = "Дискуссия / круглый стол, 40-50 минут",
                            Name = "Discussion"
                        });
                });

            modelBuilder.Entity("CallForPapers.Domain.Models.Statement", b =>
                {
                    b.HasOne("CallForPapers.Domain.Models.StatementActivity", "Activity")
                        .WithMany("Statements")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("CallForPapers.Domain.Models.StatementActivity", b =>
                {
                    b.Navigation("Statements");
                });
#pragma warning restore 612, 618
        }
    }
}
