// <auto-generated />
using System;
using CallForPapers.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CallForPapers.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240330065542_UpdateStatement")]
    partial class UpdateStatement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CallForPapers.Domain.Models.Statement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Author")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Outline")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SubmittedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("Statements");
                });

            modelBuilder.Entity("CallForPapers.Domain.Models.StatementActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1dc51594-8746-4bb9-ae4b-6f953a1e3411"),
                            Description = "Доклад, 35-45 минут",
                            Name = "Report"
                        },
                        new
                        {
                            Id = new Guid("4f8d5a07-45cd-4e3d-ab0b-b8c6b286dfb3"),
                            Description = "Мастеркласс, 1-2 часа",
                            Name = "Masterclass"
                        },
                        new
                        {
                            Id = new Guid("ce2bc301-8ff0-4d9f-ab40-8e1428b6df2b"),
                            Description = "Дискуссия / круглый стол, 40-50 минут",
                            Name = "Discussion"
                        });
                });

            modelBuilder.Entity("CallForPapers.Domain.Models.Statement", b =>
                {
                    b.HasOne("CallForPapers.Domain.Models.StatementActivity", "Activity")
                        .WithMany("Statements")
                        .HasForeignKey("ActivityId");

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("CallForPapers.Domain.Models.StatementActivity", b =>
                {
                    b.Navigation("Statements");
                });
#pragma warning restore 612, 618
        }
    }
}
